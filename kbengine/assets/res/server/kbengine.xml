<root>
	<!--
		服务端配置({assets}/res/server/kbengine.xml)

		如果你需要改变引擎设置, 请在({assets}/res/server/kbengine.xml)中覆盖kbe/res/server/kbengine_defs.xml的对应参数来修改, 
		这样的好处是不会破坏引擎的默认设置，在你更新引擎时也不会产生冲突，以及在多个逻辑项目时不会影响到其他的项目设置。
		详细说明请参考：http://kbengine.org/cn/docs/configuration/kbengine.html
	-->
	
	<channelCommon> 
		<!-- 最后一次通信时间超过此时间则被认定为超时通道， 服务器将踢出该通道 
			(If long (configurable value) no communication, channel will be kicked out of the server.)
		-->
		<timeout> 
			<internal> 30.0 </internal>
			<external> 30.0 </external>
		</timeout>

		<!-- 加密通信，只对外部通道
			(Encrypted communication, channel-external only)
			
			可选择的加密方式(Optional encryption):
				0: 无加密(No Encryption)
				1: Blowfish
				2: RSA (res\key\kbengine_private.key)
		 -->
		<encrypt_type> 1 </encrypt_type>
	</channelCommon> 
		
	<baseapp>
		<!-- 指定接口地址，可配置网卡名、MAC、IP
			（Interface address specified, configurable NIC/MAC/IP） 
		-->
		<internalInterface>  </internalInterface>
		<externalInterface>  </externalInterface>						<!-- Type: String -->
		
		<!-- 强制指定外部IP地址或者域名，在某些网络环境下，可能会使用端口映射的方式来访问局域网内部的KBE服务器，那么KBE在当前
			的机器上获得的外部地址是局域网地址，此时某些功能将会不正常。例如：账号激活邮件中给出的回调地址, 登录baseapp。
			注意：服务端并不会检查这个地址的可用性，因为无法检查。
			(Forced to specify an external IP-address or Domain-name, In some server environment, May use the port mapping to access KBE,
			So KBE on current machines on the external IP address may be a LAN IP address, Then some functions will not normal.
			For example: account activation email address given callback.
			Note: the availability of server does not check the address, because cannot check)
		-->
		<externalAddress>  </externalAddress>							<!-- Type: String -->
	</baseapp>

	<loginapp>
		<!-- 加密登录信息
			(The encrypted user login information)
			
			可选择的加密方式(Optional encryption):
				0: 无加密(No Encryption)
				1: Blowfish
				2: RSA (res\key\kbengine_private.key)
		 -->
		<encrypt_login> 1 </encrypt_login>

		<!-- 账号的类型								(Account types)
			1: 普通账号								(Normal Account)
			2: email账号(需要激活)					(Email Account, Note: activation required.)
			3: 智能账号(自动识别Email， 普通号码等)	(Smart Account (Email or Normal, etc.))
		-->
		<account_type> 1 </account_type>

	</loginapp>

	<trace_packet>
		<debug_type> 0 </debug_type>
	</trace_packet>
	
	<app_publish> 0 </app_publish>
	
	<!-- defined => kbe/res/server/kbengine_defs.xml -->
	<dbmgr>
		<account_system>
			<!-- 账号找回密码相关
				(Account reset password)
			-->
			<account_resetPassword>
				<!-- 是否开放重设密码
					(Whether open reset password)
				-->
				<enable>	true	</enable>
			</account_resetPassword>
			
			<!-- 账号注册相关
				(Account registration)
			-->
			<account_registration> 
				<!-- 是否开放注册 
					(Whether open registration)
				-->
				<enable>	true	</enable>
				
				<!-- 登录合法时游戏数据库找不到游戏账号则自动创建 
					(When logged in, the game database can not find the game account is automatically created)
				-->
				<loginAutoCreate> true </loginAutoCreate>
			</account_registration>
		</account_system>

		<!-- Database address -->
		<host> localhost </host>										<!-- Type: String -->
		<port> 3306 </port>											<!-- Type: Integer -->

		<!-- Database auth -->
		<auth>  
			<username> kbe </username>									<!-- Type: String -->
			<password> kbe </password>									<!-- Type: String -->

			<!-- is true, password is RSA -->
			<encrypt> true </encrypt>
		</auth>
		
		<databaseInterfaces>
			<default>
				<host> localhost </host> 
				<databaseName> kbe_PDK </databaseName> 		<!-- Type: String -->
			</default>
		</databaseInterfaces>
	</dbmgr>
	
	<baseapp>
		<backupPeriod> 500 </backupPeriod>
	</baseapp>
	
	<bots>
		<!-- 脚本入口模块， 相当于main函数 
			(Entry module, like the main-function)
		-->
		<entryScriptFile> kbemain </entryScriptFile>
			
		<!-- 指定接口地址，可配置网卡名、MAC、IP
			（Interface address specified, configurable NIC/MAC/IP） 
		-->
		<internalInterface>  </internalInterface>
		
		<!-- 对应baseapp的externalAddress的解决方案，当externalAddress强制下发公网IP提供登陆时，
			如果局域网内部使用机器人测试也走公网IP和流量可能会不合适，此时可以设置为true，登陆时强制直接使用内网环境。
			Corresponding to baseapp->externalAddress solution, when externalAddress mandatory release of the public network to provide landing IP,
			If the use of robot within the LAN test also take the public network IP and traffic may be inappropriate, can be set to true, 
			when landing forced to use the internal network environment. -->
		<forceInternalLogin> false </forceInternalLogin>
		
		<!-- loginapp地址 
			（loginapp address)
		-->
		<host> localhost </host>										<!-- Type: String -->
		<port> 20013 </port>											<!-- Type: Integer -->
		
		<!-- 在Entity初始化时是否触发属性的set_*事件 -->
		<isOnInitCallPropertysSetMethods> true </isOnInitCallPropertysSetMethods>
		
		<!-- 默认启动进程后自动添加这么多个机器人 
			(After starting the process, automatically add some robots)
			totalCount	： 添加总数量			(Add the total-number)
			tickTime	： 每次添加所用时间(s)	(Interval time-secs)
			tickCount	： 每次添加数量			(Each time you add the number of)
		-->
		<defaultAddBots> 
			<totalCount> 50  </totalCount>								<!-- Type: Integer -->
			<tickTime> 0.5  </tickTime>									<!-- Type: Float -->
			<tickCount> 10  </tickCount>							    <!-- Type: Integer -->
		</defaultAddBots>
		
		<!-- 机器人账号相关 
			(about bots-accounts)
		-->
		<account_infos>
			<!-- 机器人账号名称的前缀 
				(The account name prefix)
			-->
			<account_name_prefix>		bot_	</account_name_prefix>
			
			<!-- 机器人账号名称的后缀递增, 0使用随机数递增， 否则按照填写的数递增 
				注意：想让机器人每次登陆使用相同的账号请设置固定的bots程序启动时的cid参数，具体参考服务器启动脚本，机器人账号由"前缀+cid+后缀组成"。
				(The account name suffix, 0 is the use of random number, Otherwise, use account_name_suffix_inc and increasing.)
			-->
			<account_name_suffix_inc>	0		</account_name_suffix_inc><!-- Type: Integer -->
		</account_infos>
		
		<!-- Telnet服务, 如果端口被占用则向后尝试51001.. 
			(Telnet service, if the port is occupied backwards to try 51001)
		-->
		<telnet_service>
			<port> 51000 </port>
			<password> kbe </password>
			<!-- 命令默认层 
				(layer of default the command)
			-->
			<default_layer> python </default_layer>
		</telnet_service>
	</bots>
</root>
